openapi: 3.0.0
info:
  title: TtoM Project API
  description: API documentation for TtoM Project - Text to Video/Image generation platform
  version: 1.0.0
  contact:
    name: API Support
    email: support@ttomproject.com
  license:
    name: ISC

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    FirebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: Firebase ID Token

paths:
  # Root endpoint
  /:
    get:
      tags:
        - General
      summary: Welcome message
      description: Returns a welcome message for the API
      responses:
        "200":
          description: Welcome message
          content:
            text/plain:
              schema:
                type: string
                example: "Welcome to the API"

  # Authentication routes
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login with email and password
      description: Authenticate user with email and password using Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /auth/gmailLogin:
    post:
      tags:
        - Authentication
      summary: Login with Gmail
      description: Authenticate user using Gmail OAuth with Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  description: Firebase ID token from Gmail OAuth
              required:
                - idToken
      responses:
        "200":
          description: Successful Gmail login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "400":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/phoneLogin:
    post:
      tags:
        - Authentication
      summary: Login with phone number
      description: Authenticate user using phone number with Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                verificationCode:
                  type: string
              required:
                - phoneNumber
                - verificationCode
      responses:
        "200":
          description: Successful phone login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "400":
          description: Invalid phone number or verification code
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/forgotPassword:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Send password reset email to user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        "200":
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/refreshToken:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get a new access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        "200":
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  refreshToken:
                    type: string
        "401":
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Register a new user account using Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                age:
                  type: number
                phoneNumber:
                  type: string
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                dob:
                  type: string
                  format: date
              required:
                - username
                - email
                - password
                - dob
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "400":
          description: Invalid input data or user already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/fcmToken:
    post:
      tags:
        - Authentication
      summary: Add FCM token
      description: Add Firebase Cloud Messaging token for push notifications
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcmToken:
                  type: string
                  description: Firebase Cloud Messaging token
              required:
                - fcmToken
      responses:
        "200":
          description: FCM token added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Invalid FCM token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/requestOtp:
    post:
      tags:
        - Authentication
      summary: Request OTP
      description: Request a One-Time Password for user verification. Requires authentication.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP sent successfully"
                  expiresIn:
                    type: number
                    description: OTP expiration time in seconds
                    example: 300
                  OTP:
                    type: string
                    description: Testing Dummy OTP
                    example: 412503
                  nextRequestInSeconds:
                    type: number
                    description: next cooldown will be this value in seconds
                    example: 300
        "400":
          description: Cooldown period active
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Please wait X seconds before requesting a new OTP."
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

  /auth/verifyOtp:
    post:
      tags:
        - Authentication
      summary: Verify OTP
      description: Verify the One-Time Password sent to the user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  description: The OTP code to verify
                  example: "123456"
              required:
                - otp
      responses:
        "200":
          description: OTP verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP Verified Successfully!"
                  isVerified:
                    type: boolean
                    example: true
        "400":
          description: Invalid or expired OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "OTP expired or not found"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

  # User routes
  /user:
    get:
      tags:
        - User
      summary: Get user profile
      description: Retrieve the current user's profile information
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    put:
      tags:
        - User
      summary: Update user profile
      description: Update the current user's profile information
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                age:
                  type: number
                phoneNumber:
                  type: string
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                profilePicture:
                  type: string
                  format: uri
      responses:
        "200":
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/lib/effects:
    get:
      tags:
        - User
      summary: Get user effects library
      description: Retrieve the current user's effects library with filtering options
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: types
          required: true
          schema:
            type: string
          description: Comma-separated list of model types
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Number of items per page
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: status
          schema:
            type: string
          description: Filter by status
        - in: query
          name: isFav
          schema:
            type: boolean
          description: Filter by favorite status
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [newest, oldest]
            default: newest
          description: Sort order
      responses:
        "200":
          description: User effects library retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      userLib:
                        type: array
                        items:
                          type: object
                      pagination:
                        type: object
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/lib/effects/{itemId}:
    delete:
      tags:
        - User
      summary: Delete effect item from library
      description: Remove an effect item from the user's library
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: string
          description: ID of the effect item to delete
      responses:
        "200":
          description: Effect item deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "404":
          description: Effect item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/lib/stories:
    get:
      tags:
        - User
      summary: Get user stories library
      description: Retrieve the current user's stories library
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User stories library retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/lib/stories/{storyId}:
    get:
      tags:
        - User
      summary: Get specific user story
      description: Retrieve a specific story from the user's library
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: storyId
          required: true
          schema:
            type: string
          description: ID of the story to retrieve
      responses:
        "200":
          description: User story retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "404":
          description: Story not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    delete:
      tags:
        - User
      summary: Delete user story
      description: Remove a story from the user's library
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: storyId
          required: true
          schema:
            type: string
          description: ID of the story to delete
      responses:
        "200":
          description: User story deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "404":
          description: Story not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/lib/generations:
    get:
      tags:
        - User
      summary: Get user generations library
      description: Retrieve the current user's generated content library
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User generations library retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/lib/generations/{id}:
    get:
      tags:
        - User
      summary: Get specific generation
      description: Retrieve a specific generation by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the generation to retrieve
      responses:
        "200":
          description: Generation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "404":
          description: Generation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    patch:
      tags:
        - User
      summary: Update generation favorite status
      description: Update the favorite status of a generation
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the generation to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isFavorite:
                  type: boolean
                  description: Favorite status
      responses:
        "200":
          description: Generation favorite status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "404":
          description: Generation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    delete:
      tags:
        - User
      summary: Delete generation
      description: Remove a generation from the user's library
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the generation to delete
      responses:
        "200":
          description: Generation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "404":
          description: Generation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/effect/fav:
    post:
      tags:
        - User
      summary: Toggle effect favorite
      description: Add or remove an effect from user's favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                effectId:
                  type: string
                  description: ID of the effect to toggle favorite status
              required:
                - effectId
      responses:
        "200":
          description: Effect favorite status toggled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/story/fav:
    post:
      tags:
        - User
      summary: Toggle story favorite
      description: Add or remove a story from user's favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storyId:
                  type: string
                  description: ID of the story to toggle favorite status
              required:
                - storyId
      responses:
        "200":
          description: Story favorite status toggled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/generation/fav:
    post:
      tags:
        - User
      summary: Toggle generation favorite
      description: Add or remove a generation from user's favorites
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                generationId:
                  type: string
                  description: ID of the generation to toggle favorite status
              required:
                - generationId
      responses:
        "200":
          description: Generation favorite status toggled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/changeLanguage:
    post:
      tags:
        - User
      summary: Change user language preference
      description: Update the user's preferred language
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: Language code (e.g., 'en', 'ar')
                  example: "en"
              required:
                - language
      responses:
        "200":
          description: Language preference updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Invalid language code
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/user/notifications:
    get:
      tags:
        - User
      summary: Get user notifications
      description: Retrieve user's notifications
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # Story routes
  /story:
    get:
      tags:
        - Stories
      summary: Get all user stories
      description: Retrieve all stories created by the current user
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of stories per page
      responses:
        "200":
          description: Stories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalItems:
                        type: integer
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    post:
      tags:
        - Stories
      summary: Create a new story
      description: Create a new story with scenes
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                scenes:
                  type: array
                  items:
                    type: object
                    properties:
                      sceneNumber:
                        type: number
                      imageDescription:
                        type: string
                      videoDescription:
                        type: string
                      image:
                        type: string
                        format: uri
                      video:
                        type: string
                        format: uri
              required:
                - title
                - scenes
      responses:
        "201":
          description: Story created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /story/{storyID}:
    get:
      tags:
        - Stories
      summary: Get a specific story
      description: Retrieve a specific story by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: storyID
          required: true
          schema:
            type: string
          description: The story ID
      responses:
        "200":
          description: Story retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "404":
          description: Story not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    delete:
      tags:
        - Stories
      summary: Delete a story
      description: Delete a specific story by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: storyID
          required: true
          schema:
            type: string
          description: The story ID
      responses:
        "200":
          description: Story deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: Story not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /story/retry/{jobId}:
    post:
      tags:
        - Stories
      summary: Retry a failed story job
      description: Retry a failed story generation job by job ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: ID of the job to retry
      responses:
        "200":
          description: Story job retry initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

  /story/generationData:
    get:
      tags:
        - Stories
      summary: Get generation data
      description: Retrieve generation data for stories
      responses:
        "200":
          description: Generation data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "404":
          description: Generation data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    put:
      tags:
        - Stories
      summary: Update generation data
      description: Update generation data for stories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: Generation data to update
      responses:
        "200":
          description: Generation data updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # AI Models routes
  /models/videoEffects:
    get:
      tags:
        - AI Models
      summary: Get video effect models
      description: Retrieve all AI models for video effects
      responses:
        "200":
          description: Video effect models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/imageEffects:
    get:
      tags:
        - AI Models
      summary: Get image effect models
      description: Retrieve all AI models for image effects
      responses:
        "200":
          description: Image effect models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/characterEffects:
    get:
      tags:
        - AI Models
      summary: Get character effect models
      description: Retrieve all AI models for character effects
      responses:
        "200":
          description: Character effect models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/aiTools:
    get:
      tags:
        - AI Models
      summary: Get AI tools
      description: Retrieve all AI tools and utilities
      responses:
        "200":
          description: AI tools retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/ai3dTools:
    get:
      tags:
        - AI Models
      summary: Get AI 3D tools
      description: Retrieve all AI 3D modeling tools
      responses:
        "200":
          description: AI 3D tools retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/marketingTools:
    get:
      tags:
        - AI Models
      summary: Get marketing tools
      description: Retrieve all AI marketing tools
      responses:
        "200":
          description: Marketing tools retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/trending:
    get:
      tags:
        - AI Models
      summary: Get trending models
      description: Retrieve all trending AI models
      responses:
        "200":
          description: Trending models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/categories:
    get:
      tags:
        - AI Models
      summary: Get model categories
      description: Retrieve all AI model categories
      responses:
        "200":
          description: Model categories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string

  /models:
    post:
      tags:
        - AI Models
      summary: Add a new AI model
      description: Create a new AI model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                thumbnail:
                  type: string
                  format: uri
                previewUrl:
                  type: string
                  format: uri
                isVideo:
                  type: boolean
                credits:
                  type: number
                isNewModel:
                  type: boolean
                isTrending:
                  type: boolean
                isCharacterEffect:
                  type: boolean
                isAITool:
                  type: boolean
                isAI3DTool:
                  type: boolean
              required:
                - name
                - thumbnail
                - previewUrl
                - isVideo
                - credits
                - isNewModel
                - isTrending
      responses:
        "201":
          description: AI model created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /models/{id}:
    patch:
      tags:
        - AI Models
      summary: Update an AI model
      description: Update an existing AI model by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The AI model ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                thumbnail:
                  type: string
                  format: uri
                previewUrl:
                  type: string
                  format: uri
                isVideo:
                  type: boolean
                credits:
                  type: number
                isNewModel:
                  type: boolean
                isTrending:
                  type: boolean
                isCharacterEffect:
                  type: boolean
                isAITool:
                  type: boolean
                isAI3DTool:
                  type: boolean
      responses:
        "200":
          description: AI model updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "404":
          description: AI model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    delete:
      tags:
        - AI Models
      summary: Delete an AI model
      description: Delete an existing AI model by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The AI model ID
      responses:
        "200":
          description: AI model deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: AI model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /models/applyModel:
    post:
      tags:
        - AI Models
      summary: Apply an AI model to an image
      description: Apply a selected AI model to an uploaded image and return the result.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                modelId:
                  type: string
                  description: The ID of the AI model to apply
                payload[image]:
                  type: string
                  format: binary
                  description: The image file to process
              required:
                - modelId
                - payload[image]
      responses:
        "200":
          description: Effect applied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        "400":
          description: Model ID and image are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Image upload failed or internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /models/jobStatus/{id}:
    get:
      tags:
        - AI Models
      summary: Get job status
      description: Retrieve the status of a model processing job by job ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The job ID
      responses:
        "200":
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /models/retry/{jobId}:
    post:
      tags:
        - AI Models
      summary: Retry a failed model job
      description: Retry a failed AI model processing job by job ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: ID of the job to retry
      responses:
        "200":
          description: Model job retry initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

  # Admin routes
  /admin/users:
    get:
      tags:
        - Admin
      summary: Get all users (Admin only)
      description: Retrieve all users in the system (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of users per page
        - in: query
          name: isActive
          schema:
            type: boolean
          description: Filter by user active status
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalItems:
                        type: integer
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    post:
      tags:
        - Admin
      summary: Add a new user (Admin only)
      description: Create a new user account (admin access required)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                age:
                  type: number
                phoneNumber:
                  type: string
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                dob:
                  type: string
                  format: date
              required:
                - username
                - email
                - password
                - dob
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /admin/users/{id}:
    get:
      tags:
        - Admin
      summary: Get user by ID (Admin only)
      description: Retrieve a specific user by ID (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    put:
      tags:
        - Admin
      summary: Update user (Admin only)
      description: Update a user's information (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                age:
                  type: number
                phoneNumber:
                  type: string
                isAdmin:
                  type: boolean
                isActive:
                  type: boolean
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                profilePicture:
                  type: string
                  format: uri
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    delete:
      tags:
        - Admin
      summary: Delete user (Admin only)
      description: Delete a user account (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/admin/audioModels:
    get:
      tags:
        - Admin
      summary: Get all audio models (Admin only)
      description: Retrieve all audio models (admin access required)
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Audio models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Audio models retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        gender:
                          type: string
                        language:
                          type: string
                        elevenLabsId:
                          type: string
                        accent:
                          type: string
                        thumbnail:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    post:
      tags:
        - Admin
      summary: Add new audio model (Admin only)
      description: Create a new audio model (admin access required)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the audio model
                gender:
                  type: string
                  description: Gender of the voice
                language:
                  type: string
                  description: Language of the voice
                elevenLabsId:
                  type: string
                  description: ElevenLabs voice ID
                accent:
                  type: string
                  description: Accent of the voice
                thumbnail:
                  type: string
                  description: Thumbnail image URL
              required:
                - name
                - gender
                - language
                - elevenLabsId
      responses:
        "201":
          description: Audio model added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Audio model added successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      gender:
                        type: string
                      language:
                        type: string
                      elevenLabsId:
                        type: string
                      accent:
                        type: string
                      thumbnail:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "403":
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # Generation Library endpoints
  /api/v1/generation:
    post:
      tags:
        - Generation Library
      summary: Create a new generation task
      description: Create a new content generation task (image or video)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                modelId:
                  type: string
                  description: ID of the AI model to use
                prompt:
                  type: string
                  description: Text prompt for generation
                isVideo:
                  type: boolean
                  description: Whether to generate video or image
                duration:
                  type: number
                  description: Duration for video generation (in seconds)
                refImages:
                  type: array
                  items:
                    type: string
                  description: Array of reference image URLs
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Upload reference images
              required:
                - modelId
                - isVideo
      responses:
        "201":
          description: Generation task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Generation task is being processed"
                  uploadedImages:
                    type: number
                    description: Number of images uploaded
                  jobId:
                    type: string
                    description: ID of the generation job
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User not authenticated"
                  error:
                    type: object
        "402":
          description: Insufficient credits
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Insufficient credits for this generation"
                  error:
                    type: object
        "404":
          description: Model or generation data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

    get:
      tags:
        - Generation Library
      summary: Get generation info
      description: Retrieve available models and generation configuration
      responses:
        "200":
          description: Generation info retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Generation info retrieved successfully"
                  data:
                    type: object
                    properties:
                      imageModels:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            credits:
                              type: number
                            category:
                              type: string
                      videoModels:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            credits:
                              type: array
                              items:
                                type: object
                            category:
                              type: string
        "404":
          description: No generation info found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No generation info found"
                  error:
                    type: object

    patch:
      tags:
        - Generation Library
      summary: Update generation info
      description: Update generation models and configuration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageModels:
                  type: array
                  items:
                    type: object
                videoModels:
                  type: array
                  items:
                    type: object
      responses:
        "200":
          description: Generation info updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Generation info updated successfully"
                  data:
                    type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/generation/retry/{jobId}:
    post:
      tags:
        - Generation Library
      summary: Retry a failed generation job
      description: Retry a failed generation job by job ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: ID of the job to retry
      responses:
        "200":
          description: Generation job successfully added back to queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Generation library job successfully added back to queue"
                  data:
                    type: object
                    properties:
                      jobId:
                        type: string
                      status:
                        type: string
                        example: "pending"
                      queueType:
                        type: string
                        example: "generationLib"
        "400":
          description: Job ID is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Job ID is required"
                  error:
                    type: object
        "401":
          description: User authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User authentication required"
                  error:
                    type: object
        "404":
          description: Job not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No failed generation library job found with the provided ID"
                  error:
                    type: object
        "409":
          description: Job already being processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "500":
          description: Failed to add job to queue
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to add generation library job to processing queue"
                  error:
                    type: object

  # Purchasing endpoints
  /api/v1/purchasing/subscribers:
    get:
      tags:
        - Purchasing
      summary: Get all users (subscribers)
      description: Retrieve a list of all users from the database (not actual subscription data from RevenueCat)
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Subscribers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Users retrieved successfully"
                  note:
                    type: string
                    example: "This endpoint returns users from the database. For actual subscription data, use the individual user subscription endpoint."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                        username:
                          type: string
                        email:
                          type: string
                        credits:
                          type: number
                        firebaseUid:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /api/v1/purchasing/subscribers/{userId}:
    get:
      tags:
        - Purchasing
      summary: Get user subscriptions
      description: Retrieve subscriptions for a specific user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The user ID to get subscriptions for
      responses:
        "200":
          description: User subscriptions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User subscriptions retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        subscriptionType:
                          type: string
                        status:
                          type: string
                        startDate:
                          type: string
                          format: date-time
                        endDate:
                          type: string
                          format: date-time
                        features:
                          type: array
                          items:
                            type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        "500":
          description: Failed to retrieve user subscriptions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Failed to retrieve user subscriptions"
                  error:
                    type: object

  /api/v1/purchasing/validate:
    post:
      tags:
        - Purchasing
      summary: Validate specific purchase (Webhook)
      description: Webhook endpoint to validate a specific purchase transaction. Requires RevenueCat webhook signature verification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: RevenueCat webhook event payload
      responses:
        "200":
          description: Purchase validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "Purchase validated successfully"
        "400":
          description: Invalid webhook data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Invalid webhook signature
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Failed to validate purchase
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

  /api/v1/purchasing/refund:
    post:
      tags:
        - Purchasing
      summary: Process purchase refund (Webhook)
      description: Webhook endpoint to process a purchase refund. Requires RevenueCat webhook signature verification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: RevenueCat webhook refund event payload
      responses:
        "200":
          description: Refund processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: "Refund processed successfully"
        "400":
          description: Invalid webhook data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Invalid webhook signature
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Failed to process refund
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

tags:
  - name: General
    description: General API endpoints
  - name: Authentication
    description: User authentication and authorization endpoints
  - name: User
    description: User profile management endpoints
  - name: Stories
    description: Story creation and management endpoints
  - name: AI Models
    description: AI model management endpoints
  - name: Admin
    description: Admin-only endpoints for user management
  - name: Purchasing
    description: Subscription and purchase management endpoints
  - name: Generation Library
    description: Content generation and library management endpoints
