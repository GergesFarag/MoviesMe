openapi: 3.0.0
info:
  title: TtoM Project API
  description: API documentation for TtoM Project - Text to Video/Image generation platform
  version: 1.0.0
  contact:
    name: API Support
    email: support@ttomproject.com
  license:
    name: ISC
    
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    FirebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: Firebase ID Token

paths:
  # Root endpoint
  /:
    get:
      tags:
        - General
      summary: Welcome message
      description: Returns a welcome message for the API
      responses:
        '200':
          description: Welcome message
          content:
            text/plain:
              schema:
                type: string
                example: "Welcome to the API"

  # Authentication routes
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login with email and password
      description: Authenticate user with email and password using Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
    patch:
      tags:
        - User
      summary: Update user profile
      description: Update the current user's profile information
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                age:
                  type: number
                phoneNumber:
                  type: string
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                profilePicture:
                  type: string
                  format: uri
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                - username
                - email
                - password
                - dob
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/gmailLogin:
    post:
      tags:
        - Authentication
      summary: Login with Gmail
      description: Authenticate user using Gmail OAuth with Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  description: Firebase ID token from Gmail OAuth
              required:
                - idToken
      responses:
        '200':
          description: Successful Gmail login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/phoneLogin:
    post:
      tags:
        - Authentication
      summary: Login with phone number
      description: Authenticate user using phone number with Firebase
      security:
        - FirebaseAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                verificationCode:
                  type: string
              required:
                - phoneNumber
                - verificationCode
      responses:
        '200':
          description: Successful phone login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Invalid phone number or verification code
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/forgotPassword:
    post:
      tags:
        - Authentication
                    /story/generationData:
                      get:
                        tags:
                          - Stories
                        summary: Get story generation data
                        description: Retrieve generation data for stories
                        responses:
                          '200':
                            description: Generation data retrieved successfully
                            content:
                              application/json:
                                schema:
                                  type: object
                                  properties:
                                    success:
                                      type: boolean
                                    data:
                                      type: object
                      put:
                        tags:
                          - Stories
                        summary: Update story generation data
                        description: Update generation data for stories
                        requestBody:
                          required: true
                          content:
                            application/json:
                              schema:
                                type: object
                        responses:
                          '200':
                            description: Generation data updated successfully
                            content:
                              application/json:
                                schema:
                                  type: object
                                  properties:
                                    success:
                                      type: boolean
                                    data:
                                      type: object
      summary: Request password reset
      description: Send password reset email to user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /auth/refreshToken:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get a new access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # User routes
  /user:
    get:
      tags:
        - User
      summary: Get user profile
      description: Retrieve the current user's profile information
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    put:
      tags:
        - User
      summary: Update user profile
      description: Update the current user's profile information
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                age:
                  type: number
                phoneNumber:
                  type: string
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                profilePicture:
                  type: string
                  format: uri
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # Story routes
  /story:
    get:
      tags:
        - Stories
      summary: Get all user stories
      description: Retrieve all stories created by the current user
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of stories per page
      responses:
        '200':
          description: Stories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalItems:
                        type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    post:
      tags:
        - Stories
      summary: Create a new story
      description: Create a new story with scenes
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                scenes:
                  type: array
                  items:
                    type: object
                    properties:
                      sceneNumber:
                        type: number
                      imageDescription:
                        type: string
                      videoDescription:
                        type: string
                      image:
                        type: string
                        format: uri
                      video:
                        type: string
                        format: uri
              required:
                - title
                - scenes
      responses:
        '201':
          description: Story created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /story/{storyID}:
    get:
      tags:
        - Stories
      summary: Get a specific story
      description: Retrieve a specific story by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: storyID
          required: true
          schema:
            type: string
          description: The story ID
      responses:
        '200':
          description: Story retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '404':
          description: Story not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    delete:
      tags:
        - Stories
      summary: Delete a story
      description: Delete a specific story by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: storyID
          required: true
          schema:
            type: string
          description: The story ID
      responses:
        '200':
          description: Story deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '404':
          description: Story not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # AI Models routes
  /models/videoEffects:
    get:
      tags:
        - AI Models
      summary: Get video effect models
      description: Retrieve all AI models for video effects
      responses:
        '200':
          description: Video effect models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/imageEffects:
    get:
      tags:
        - AI Models
      summary: Get image effect models
      description: Retrieve all AI models for image effects
      responses:
        '200':
          description: Image effect models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/characterEffects:
    get:
      tags:
        - AI Models
      summary: Get character effect models
      description: Retrieve all AI models for character effects
      responses:
        '200':
          description: Character effect models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/aiTools:
    get:
      tags:
        - AI Models
      summary: Get AI tools
      description: Retrieve all AI tools and utilities
      responses:
        '200':
          description: AI tools retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/ai3dTools:
    get:
      tags:
        - AI Models
      summary: Get AI 3D tools
      description: Retrieve all AI 3D modeling tools
      responses:
        '200':
          description: AI 3D tools retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/marketingTools:
    get:
      tags:
        - AI Models
      summary: Get marketing tools
      description: Retrieve all AI marketing tools
      responses:
        '200':
          description: Marketing tools retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models/trending:
    get:
      tags:
        - AI Models
      summary: Get trending models
      description: Retrieve all trending AI models
      responses:
        '200':
          description: Trending models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object

  /models:
    post:
      tags:
        - AI Models
      summary: Add a new AI model
      description: Create a new AI model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                thumbnail:
                  type: string
                  format: uri
                previewUrl:
                  type: string
                  format: uri
                isVideo:
                  type: boolean
                credits:
                  type: number
                isNewModel:
                  type: boolean
                isTrending:
                  type: boolean
                isCharacterEffect:
                  type: boolean
                isAITool:
                  type: boolean
                isAI3DTool:
                  type: boolean
              required:
                - name
                - thumbnail
                - previewUrl
                - isVideo
                - credits
                - isNewModel
                - isTrending
      responses:
        '201':
          description: AI model created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /models/{id}:
    patch:
      tags:
        - AI Models
      summary: Update an AI model
      description: Update an existing AI model by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The AI model ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                thumbnail:
                  type: string
                  format: uri
                previewUrl:
                  type: string
                  format: uri
                isVideo:
                  type: boolean
                credits:
                  type: number
                isNewModel:
                  type: boolean
                isTrending:
                  type: boolean
                isCharacterEffect:
                  type: boolean
                isAITool:
                  type: boolean
                isAI3DTool:
                  type: boolean
      responses:
        '200':
          description: AI model updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '404':
          description: AI model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    delete:
      tags:
        - AI Models
      summary: Delete an AI model
      description: Delete an existing AI model by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The AI model ID
      responses:
        '200':
          description: AI model deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '404':
          description: AI model not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  # Admin routes
  /admin/users:
    get:
      tags:
        - Admin
      summary: Get all users (Admin only)
      description: Retrieve all users in the system (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of users per page
        - in: query
          name: isActive
          schema:
            type: boolean
          description: Filter by user active status
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      totalPages:
                        type: integer
                      totalItems:
                        type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    post:
      tags:
        - Admin
      summary: Add a new user (Admin only)
      description: Create a new user account (admin access required)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                age:
                  type: number
                phoneNumber:
                  type: string
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                dob:
                  type: string
                  format: date
              required:
                - username
                - email
                - password
                - dob
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

  /admin/users/{id}:
    get:
      tags:
        - Admin
      summary: Get user by ID (Admin only)
      description: Retrieve a specific user by ID (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    put:
      tags:
        - Admin
      summary: Update user (Admin only)
      description: Update a user's information (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                age:
                  type: number
                phoneNumber:
                  type: string
                isAdmin:
                  type: boolean
                isActive:
                  type: boolean
                userLocation:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                profilePicture:
                  type: string
                  format: uri
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
                
    delete:
      tags:
        - Admin
      summary: Delete user (Admin only)
      description: Delete a user account (admin access required)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object
        '403':
          description: Forbidden - Admin access required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  error:
                    type: object

tags:
  - name: General
    description: General API endpoints
  - name: Authentication
    description: User authentication and authorization endpoints
  - name: User
    description: User profile management endpoints
  - name: Stories
    description: Story creation and management endpoints
  - name: AI Models
    description: AI model management endpoints
  - name: Admin
    description: Admin-only endpoints for user management
